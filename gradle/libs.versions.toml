[versions]
#gradle = "8.5.0-alpha05"
gradle = "8.4.1"

kspVersion = "2.0.0-1.0.22"

androidxBaselineprofileGradlePlugin = "1.2.0"
composeCollapsable = "0.3.0"
dragselect = "2.3.0"
easylauncher = "6.4.0"
firebaseCrashlyticsGradle = "2.9.9"
googleServices = "4.4.2"
haze = "0.7.1"
kamelImage = "0.9.5"
kotlin = "2.0.0"
latestAboutLibsRelease = "11.2.1"
coroutinesVersion = "1.8.1"
glideVersion = "4.16.0"
pagingVersion = "3.3.0"
protobufGradlePlugin = "0.9.4"
roomVersion = "2.7.0-alpha03"
navVersion = "2.8.0-beta02"
koinVersion = "3.5.6"
coil = "2.6.0"
lifecycle = "2.8.1"
jetpack = "1.6.0-alpha03"
jetpackCompiler = "1.5.11"
jetbrainsCompiler = "1.5.1"
accompanist = "0.34.0"
okhttpVersion = "4.12.0"
ktorVersion = "2.3.11"
tvCompose = "1.0.0-alpha10"
workVersion = "2.9.0"
ziplineVersion = "1.1.0"
landscapist = "2.3.4"
protobufVersion = "4.26.1"
sketchVersion = "3.2.5"
activity = "1.9.0"
composeBomVersion = "2024.05.00-alpha03"

### MangaWorld
piasy = "1.8.1"

### AnimeWorld
autoBinding = "1.1-beta04"
media3Version = "1.3.1"

junit = "1.1.5"
espresso-core = "3.5.1"
uiautomator = "2.2.0"
benchmark-macro-junit4 = "1.2.2"
androidx-baselineprofile = "1.2.2"
profileinstaller = "1.3.1"

[plugins]
kotlinGradle = { id = "org.jetbrains.kotlin:kotlin.gradle.plugin", version.ref = "kotlin" }
kotlinSerializationGradle = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
navSafeArgsGradle = { id = "androidx.navigation:navigation-safe-args-gradle-plugin", version.ref = "navVersion" }
ksp = { id = "com.google.devtools.ksp", version.ref = "kspVersion" }
org-jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

[libraries]
androidx-baselineprofile-gradle-plugin = { module = "androidx.baselineprofile:androidx.baselineprofile.gradle.plugin", version.ref = "androidx-baselineprofile" }
compose-collapsable = { module = "me.tatarka.compose.collapsable:compose-collapsable", version.ref = "composeCollapsable" }
dragselect = { module = "com.dragselectcompose:dragselect", version.ref = "dragselect" }
easylauncher = { module = "com.project.starter:easylauncher", version.ref = "easylauncher" }
firebase-crashlytics-gradle = { module = "com.google.firebase:firebase-crashlytics-gradle", version.ref = "firebaseCrashlyticsGradle" }
google-services = { module = "com.google.gms:google-services", version.ref = "googleServices" }
gradle = { module = "com.android.tools.build:gradle", version.ref = "gradle" }
haze = { module = "dev.chrisbanes.haze:haze", version.ref = "haze" }
hazeMaterials = { module = "dev.chrisbanes.haze:haze-materials", version.ref = "haze" }
kamel-image = { module = "media.kamel:kamel-image", version.ref = "kamelImage" }
kotlinStLib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
navigation-safe-args-gradle-plugin = { module = "androidx.navigation:navigation-safe-args-gradle-plugin", version.ref = "navVersion" }
palette = "androidx.palette:palette-ktx:1.0.0"
gson = "com.google.code.gson:gson:2.11.0"
androidx-activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "activity" }

#Compose
composePlatform = { module = "dev.chrisbanes.compose:compose-bom", version.ref = "composeBomVersion" }
composeUi = { group = "androidx.compose.ui", name = "ui" }
composeUiTooling = { group = "androidx.compose.ui", name = "ui-tooling" }
composeFoundation = { group = "androidx.compose.foundation", name = "foundation" }
materialYou = { group = "androidx.compose.material3", name = "material3" }
materialYou-common = { group = "androidx.compose.material3", name = "material3-common" }
materialWindow = { group = "androidx.compose.material3", name = "material3-window-size-class" }
materialAdaptive = { group = "androidx.compose.material3.adaptive", name = "adaptive" }
adaptive-layout-android = { group = "androidx.compose.material3.adaptive", name = "adaptive-layout-android" }
adaptive-navigation-android = { group = "androidx.compose.material3.adaptive", name = "adaptive-navigation-android" }
material-adaptive-navigation-suite = { group = "androidx.compose.material3", name = "material3-adaptive-navigation-suite" }
composeMaterialIconsCore = { group = "androidx.compose.material", name = "material-icons-core" }
composeMaterialIconsExtended = { group = "androidx.compose.material", name = "material-icons-extended" }
composeViewBinding = { group = "androidx.compose.ui", name = "ui-viewbinding" }
protobuf-gradle-plugin = { module = "com.google.protobuf:protobuf-gradle-plugin", version.ref = "protobufGradlePlugin" }
tv-material = { module = "androidx.tv:tv-material", version.ref = "tvCompose" }
tv-foundation = { module = "androidx.tv:tv-foundation", version.ref = "tvCompose" }
uiUtil = { group = "androidx.compose.ui", name = "ui-util" }
composeAnimation = { group = "androidx.compose.animation", name = "animation" }
composeRuntimeLivedata = { group = "androidx.compose.runtime", name = "runtime-livedata" }
composeLifecycle = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
composeActivity = { module = "androidx.activity:activity-compose", version.ref = "activity" }
composeLifecycleRuntime = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }
landscapist-bom = { module = "com.github.skydoves:landscapist-bom", version.ref = "landscapist" }
landscapistGlide = { group = "com.github.skydoves", name = "landscapist-glide" }
landscapistPalette = { group = "com.github.skydoves", name = "landscapist-palette" }
landscapistPlaceholder = { group = "com.github.skydoves", name = "landscapist-placeholder" }
composeConstraintLayout = "androidx.constraintlayout:constraintlayout-compose:1.0.1"
coilCompose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
coilVideo = { module = "io.coil-kt:coil-video", version.ref = "coil" }
navCompose = { module = "androidx.navigation:navigation-compose", version.ref = "navVersion" }

#Accompanist
drawablePainter = { module = "com.google.accompanist:accompanist-drawablepainter", version.ref = "accompanist" }
permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }
adaptive = { module = "com.google.accompanist:accompanist-adaptive", version.ref = "accompanist" }
okhttpLib = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttpVersion" }
okhttpDns = { module = "com.squareup.okhttp3:okhttp-dnsoverhttps", version.ref = "okhttpVersion" }

coroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutinesVersion" }
coroutinesAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutinesVersion" }
coroutinesPlayServices = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "coroutinesVersion" }

glide = { module = "com.github.bumptech.glide:glide", version.ref = "glideVersion" }
glideCompiler = { module = "com.github.bumptech.glide:ksp", version.ref = "glideVersion" }
glideRecyclerview = { module = "com.github.bumptech.glide:recyclerview-integration", version.ref = "glideVersion" }
glideCompose = "com.github.bumptech.glide:compose:1.0.0-beta01"

androidCore = "androidx.core:core-ktx:1.13.1"
appCompat = "androidx.appcompat:appcompat:1.7.0"
material = "com.google.android.material:material:1.12.0"

coreLibraryDesugaring = { module = "com.android.tools:desugar_jdk_libs", version = "2.0.4" }

lifecycleExtensions = "androidx.lifecycle:lifecycle-extensions:2.2.0"
lifecycleRuntime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycleLivedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
lifecycleViewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }

koinAndroid = { module = "io.insert-koin:koin-android", version.ref = "koinVersion" }
koinCompose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koinVersion" }

roomCompiler = { module = "androidx.room:room-compiler", version.ref = "roomVersion" }
roomRuntime = { module = "androidx.room:room-runtime", version.ref = "roomVersion" }
roomKtx = { module = "androidx.room:room-ktx", version.ref = "roomVersion" }

ktorCore = { module = "io.ktor:ktor-client-core", version.ref = "ktorVersion" }
ktorAuth = { module = "io.ktor:ktor-client-auth", version.ref = "ktorVersion" }
ktorAndroid = { module = "io.ktor:ktor-client-android", version.ref = "ktorVersion" }
ktorLogging = { module = "io.ktor:ktor-client-logging", version.ref = "ktorVersion" }
ktorSerialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktorVersion" }
ktorJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorVersion" }
ktorContentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorVersion" }
ktorOkHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktorVersion" }
ktorGson = { module = "io.ktor:ktor-serialization-gson", version.ref = "ktorVersion" }
ktorJsoup = "com.tfowl.ktor:ktor-jsoup:2.0.0"

workRuntime = { module = "androidx.work:work-runtime", version.ref = "workVersion" }

pagingRuntime = { module = "androidx.paging:paging-runtime-ktx", version.ref = "pagingVersion" }
roomPaging = { module = "androidx.room:room-paging", version.ref = "roomVersion" }

aboutLibrariesCore = { module = "com.mikepenz:aboutlibraries-core", version.ref = "latestAboutLibsRelease" }
aboutLibrariesCompose = { module = "com.mikepenz:aboutlibraries-compose-m3", version.ref = "latestAboutLibsRelease" }
navFragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navVersion" }
navUiKtx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navVersion" }
navTesting = { module = "androidx.navigation:navigation-testing", version.ref = "navVersion" }

reactiveNetwork = "ru.beryukhov:flowreactivenetwork:1.0.4"
fragmentKtx = "androidx.fragment:fragment-ktx:1.7.1"

iconicsCore = "com.mikepenz:iconics-core:5.5.0-compose01"

androidxLegacySupport = "androidx.legacy:legacy-support-v4:1.0.0"

firebaseAuth = "com.google.firebase:firebase-auth:22.3.1"

pagingCompose = { module = "androidx.paging:paging-compose", version.ref = "pagingVersion" }

fileChooser = "com.github.hedzr:android-file-chooser:1.2.0"

androidxWindow = "androidx.window:window:1.3.0"
androidBrowserHelper = "com.google.androidbrowserhelper:androidbrowserhelper:2.5.0"
androidxBrowser = "androidx.browser:browser:1.8.0"

showMoreLess = "com.github.noowenz:ShowMoreLess:1.0.3"

toolbarCompose = "me.onebone:toolbar-compose:2.3.5"
lazyColumnScrollbar = "com.github.nanihadesuka:LazyColumnScrollbar:2.1.0"
sonner = { module = "io.github.dokar3:sonner", version = "0.3.6" }

datastore = "androidx.datastore:datastore:1.1.1"
datastorePref = "androidx.datastore:datastore-preferences:1.1.1"

jsoup = "org.jsoup:jsoup:1.17.2"

crashlytics = "com.google.firebase:firebase-crashlytics:18.6.4"
analytics = "com.google.firebase:firebase-analytics:21.6.2"
playServices = "com.google.android.gms:play-services-auth:21.2.0"

preference = "androidx.preference:preference-ktx:1.2.1"

recyclerview = "androidx.recyclerview:recyclerview:1.3.2"
constraintlayout = "androidx.constraintlayout:constraintlayout:2.1.4"
swiperefresh = "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

zoomableModifier = "net.engawapg.lib:zoomable:1.6.1"

### MangaWorld
coilGif = { module = "io.coil-kt:coil-gif", version.ref = "coil" }
subsamplingImageView = "com.davemorrissey.labs:subsampling-scale-image-view-androidx:3.10.0"
bigImageViewer = { module = "com.github.piasy:BigImageViewer", version.ref = "piasy" }
bigImageGlideLoader = { module = "com.github.piasy:GlideImageLoader", version.ref = "piasy" }
progressPieIndicator = { module = "com.github.piasy:ProgressPieIndicator", version.ref = "piasy" }

### AnimeWorld
slideToAct = "com.ncorti:slidetoact:0.11.0"
mediaRouter = "androidx.mediarouter:mediarouter:1.7.0"
torrentStream = "com.github.TorrentStream:TorrentStream-Android:3.0.0"
castFramework = "com.google.android.gms:play-services-cast-framework:21.5.0"
localCast = "com.github.KaustubhPatange:Android-Cast-Local-Sample:0.01"
superForwardView = "com.github.ertugrulkaragoz:SuperForwardView:0.2"

autoBindings = { module = "io.github.kaustubhpatange:autobindings", version.ref = "autoBinding" }
autoBindingsCompiler = { module = "io.github.kaustubhpatange:autobindings-compiler", version.ref = "autoBinding" }
# For media playback using ExoPlayer
exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3Version" }
# For DASH playback support with ExoPlayer
exoplayerDash = { module = "androidx.media3:media3-exoplayer-dash", version.ref = "media3Version" }
# For HLS playback support with ExoPlayer
exoplayerHls = { module = "androidx.media3:media3-exoplayer-hls", version.ref = "media3Version" }
# For RTSP playback support with ExoPlayer
exoplayerRtsp = { module = "androidx.media3:media3-exoplayer-rtsp", version.ref = "media3Version" }
# For ad insertion using the Interactive Media Ads SDK with ExoPlayer
exoplayerIma = { module = "androidx.media3:media3-exoplayer-ima", version.ref = "media3Version" }
# For loading data using the Cronet network stack
exoplayerdatasourceCronet = { module = "androidx.media3:media3-datasource-cronet", version.ref = "media3Version" }
# For loading data using the OkHttp network stack
exoplayerdatasourceOkhttp = { module = "androidx.media3:media3-datasource-okhttp", version.ref = "media3Version" }
# For loading data using librtmp
exoplayerdatasourceRtmp = { module = "androidx.media3:media3-datasource-rtmp", version.ref = "media3Version" }
# For building media playback UIs
exoplayerui = { module = "androidx.media3:media3-ui", version.ref = "media3Version" }
# For exposing and controlling media sessions
exoplayersession = { module = "androidx.media3:media3-session", version.ref = "media3Version" }
# For extracting data from media containers
exoplayerextractor = { module = "androidx.media3:media3-extractor", version.ref = "media3Version" }
# For integrating with Cast
exoplayercast = { module = "androidx.media3:media3-cast", version.ref = "media3Version" }
# For scheduling background operations using Jetpack Work"s WorkManager with ExoPlayer
exoplayerWorkmanager = { module = "androidx.media3:media3-exoplayer-workmanager", version.ref = "media3Version" }
# For transforming media files
exoplayertransformer = { module = "androidx.media3:media3-transformer", version.ref = "media3Version" }
# Utilities for testing media components (including ExoPlayer components)
exoplayertestUtils = { module = "androidx.media3:media3-test-utils", version.ref = "media3Version" }
# Utilities for testing media components (including ExoPlayer components) via Robolectric
exoplayertestUtilsRobolectric = { module = "androidx.media3:media3-test-utils-robolectric", version.ref = "media3Version" }
# Common functionality for media database components
exoplayerdatabase = { module = "androidx.media3:media3-database", version.ref = "media3Version" }
# Common functionality for media decoders
exoplayerdecoder = { module = "androidx.media3:media3-decoder", version.ref = "media3Version" }
# Common functionality for loading data
exoplayerdatasource = { module = "androidx.media3:media3-datasource", version.ref = "media3Version" }
# Common functionality used across multiple media libraries
exoplayercommon = { module = "androidx.media3:media3-common", version.ref = "media3Version" }
exoplayerleanback = { module = "androidx.media3:media3-ui-leanback", version.ref = "media3Version" }

leanback = "androidx.leanback:leanback:1.2.0-alpha02"
leanbackPreference = "androidx.leanback:leanback-preference:1.2.0-alpha02"

duktape = "com.squareup.duktape:duktape-android:1.4.0"
rhino = "org.mozilla:rhino:1.7.14"
kotson = "com.github.salomonbrys.kotson:kotson:2.5.0"
karnKhttp = "io.karn:khttp-android:0.1.2"
ziplineLoader = { module = "app.cash.zipline:zipline-loader", version.ref = "ziplineVersion" }
ziplineProfiler = { module = "app.cash.zipline:zipline-profiler", version.ref = "ziplineVersion" }
retrofit = "com.squareup.retrofit2:retrofit:2.11.0"
retrofitGson = "com.squareup.retrofit2:converter-gson:2.11.0"
kotlinxSerialization = "org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.0"
androidxWebkit = "androidx.webkit:webkit:1.11.0"

mlkitTranslate = "com.google.mlkit:translate:17.0.2"
mlkitLanguage = "com.google.mlkit:language-id:17.0.5"
firebasePlatform = "com.google.firebase:firebase-bom:32.8.1"
firebaseDatabase = { group = "com.google.firebase", name = "firebase-database" }
firebaseFirestore = { group = "com.google.firebase", name = "firebase-firestore" }
firebaseUiAuth = "com.firebaseui:firebase-ui-auth:8.0.2"

protobufJava = { module = "com.google.protobuf:protobuf-javalite", version.ref = "protobufVersion" }
protobufKotlin = { module = "com.google.protobuf:protobuf-kotlin-lite", version.ref = "protobufVersion" }

sketch-compose = { module = "io.github.panpf.sketch3:sketch-compose", version.ref = "sketchVersion" }
sketch-zoom = { module = "io.github.panpf.sketch3:sketch-zoom", version.ref = "sketchVersion" }
sketch-extensions = { module = "io.github.panpf.sketch3:sketch-extensions", version.ref = "sketchVersion" }
sketch-gif = { module = "io.github.panpf.sketch3:sketch-gif-koral", version.ref = "sketchVersion" }
junit = { group = "androidx.test.ext", name = "junit", version.ref = "junit" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso-core" }
uiautomator = { group = "androidx.test.uiautomator", name = "uiautomator", version.ref = "uiautomator" }
benchmark-macro-junit4 = { group = "androidx.benchmark", name = "benchmark-macro-junit4", version.ref = "benchmark-macro-junit4" }
profileinstaller = { group = "androidx.profileinstaller", name = "profileinstaller", version.ref = "profileinstaller" }

[bundles]
compose = [
    "composeUi", "composeUiTooling", "composeFoundation",
    "composeMaterialIconsCore", "composeMaterialIconsExtended",
    "composeAnimation",
    "composeActivity", "composeLifecycle", "composeLifecycleRuntime",
    "composeRuntimeLivedata",
    "landscapist-bom", "landscapistGlide", "landscapistPalette", "landscapistPlaceholder",
    "coilCompose",
    "composeConstraintLayout", "permissions",
    "drawablePainter", "uiUtil",
    "materialYou", "materialYou-common",
    "materialWindow",
    "navCompose"
]
composeTv = [
    "composeUi", "composeUiTooling",
    "composeMaterialIconsCore", "composeMaterialIconsExtended",
    "composeAnimation",
    "composeActivity", "composeLifecycle", "composeLifecycleRuntime",
    "composeRuntimeLivedata",
    "landscapist-bom", "landscapistGlide", "landscapistPalette", "landscapistPlaceholder",
    "coilCompose",
    "composeConstraintLayout", "permissions",
    "drawablePainter", "uiUtil",
    "navCompose"
]
media3 = [
    "exoplayer",
    "exoplayerDash", "exoplayerHls", "exoplayerRtsp", "exoplayerIma",
    "exoplayerdatasourceCronet", "exoplayerdatasource", "exoplayerdatasourceRtmp", "exoplayerdatasourceOkhttp",
    "exoplayerui",
    "exoplayersession",
    "exoplayerextractor",
    "exoplayercast",
    "exoplayerWorkmanager",
    "exoplayertransformer",
    "exoplayerdatabase",
    "exoplayerdecoder",
    "exoplayercommon"
]
leanbackLibs = ["leanback", "leanbackPreference"]

okHttpLibs = ["okhttpLib", "okhttpDns"]
koinLibs = ["koinAndroid", "koinCompose"]
firebaseCrashLibs = ["crashlytics", "analytics"]
datastoreLibs = ["datastore", "datastorePref"]

piasyLibs = ["bigImageViewer", "bigImageGlideLoader", "progressPieIndicator"]
ziplineLibs = ["ziplineLoader", "ziplineProfiler"]

ktorLibs = [
    "ktorCore",
    "ktorAuth",
    "ktorAndroid",
    "ktorLogging",
    "ktorSerialization",
    "ktorJson",
    "ktorContentNegotiation",
    "ktorOkHttp",
    "ktorGson",
    "ktorJsoup"
]

roomLibs = ["roomRuntime", "roomKtx"]

pagingLibs = ["pagingRuntime", "roomPaging"]

protobuf = ["protobufJava", "protobufKotlin"]

sketch = ["sketch-compose", "sketch-extensions", "sketch-gif", "sketch-zoom"]