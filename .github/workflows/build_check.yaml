name: Minimal Android CI Workflow

on:
  #push:
  #  branches:
  #    - master
  #    - develop
  #  paths-ignore:
  #    - '.github/**'
  pull_request:
    types: [ assigned, opened, synchronize, reopened ]
    branches:
      - develop
      - master
    paths-ignore:
      - '.github/**'
  workflow_dispatch:
    inputs:
      build_animeworld:
        description: 'Build AnimeWorld?'
        required: true
        default: 'true'
      build_animeworldtv:
        description: 'Build AnimeWorldTV?'
        required: true
        default: 'true'
      build_mangaworld:
        description: 'Build MangaWorld?'
        required: true
        default: 'true'
      build_novelworld:
        description: 'Build NovelWorld?'
        required: true
        default: 'true'

jobs:
  apk:
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - run: echo $ANIME_GOOGLE_SERVICES_JSON > animeworld/google-services.json
        env:
          ANIME_GOOGLE_SERVICES_JSON: ${{ secrets.ANIME_SERVICES }}
      - run: echo $MANGA_GOOGLE_SERVICES_JSON > mangaworld/google-services.json
        env:
          MANGA_GOOGLE_SERVICES_JSON: ${{ secrets.MANGA_SERVICES }}
      - run: echo $NOVEL_GOOGLE_SERVICES_JSON > novelworld/google-services.json
        env:
          NOVEL_GOOGLE_SERVICES_JSON: ${{ secrets.NOVEL_SERVICES }}
      - run: echo $ANIME_TV_GOOGLE_SERVICES_JSON > animeworldtv/google-services.json
        env:
          ANIME_TV_GOOGLE_SERVICES_JSON: ${{ secrets.ANIME_TV_SERVICES }}
      - run: echo OTAKU_MANAGER_GOOGLE_SERVICES_JSON > otakumanager/google-services.json
        env:
          OTAKU_MANAGER_GOOGLE_SERVICES_JSON: ${{ secrets.OTAKU_MANAGER_SERVICES }}

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 11

      #      - name: Build all artifacts
      #        id: buildAllApks
      #        uses: eskatos/gradle-command-action@v1.3.3
      #        with:
      #          gradle-version: current
      #          wrapper-cache-enabled: true
      #          dependencies-cache-enabled: true
      #          configuration-cache-enabled: true
      #          arguments: assembleRelease
      - if: github.event.inputs.build_mangaworld == 'true' || github.event_name == 'pull_request'
        name: Build MangaWorld artifacts
        id: buildMangaApks
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: current
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true
          configuration-cache-enabled: true
          arguments: mangaworld:assembleRelease

      - if: github.event.inputs.build_animeworld == 'true' || github.event_name == 'pull_request'
        name: Build AnimeWorld artifacts
        id: buildAnimeApks
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: current
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true
          configuration-cache-enabled: true
          arguments: animeworld:assembleRelease

      - if: github.event.inputs.build_animeworldtv == 'true' || github.event_name == 'pull_request'
        name: Build AnimeWorldTV artifacts
        id: buildAnimeTvApks
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: current
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true
          configuration-cache-enabled: true
          arguments: animeworldtv:assembleRelease

      - if: github.event.inputs.build_novelworld == 'true' || github.event_name == 'pull_request'
        name: Build NovelWorld artifacts
        id: buildNovelApks
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: current
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true
          configuration-cache-enabled: true
          arguments: novelworld:assembleRelease

      - if: github.event.inputs.build_mangaworld == 'true' || github.event_name == 'pull_request'
        uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: manga_sign
        with:
          releaseDirectory: mangaworld/build/outputs/apk/full/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - if: github.event.inputs.build_mangaworld == 'true' || github.event_name == 'pull_request'
        uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: manga_sign_no_firebase
        with:
          releaseDirectory: mangaworld/build/outputs/apk/noFirebase/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - if: github.event.inputs.build_animeworld == 'true' || github.event_name == 'pull_request'
        uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: anime_sign
        with:
          releaseDirectory: animeworld/build/outputs/apk/full/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - if: github.event.inputs.build_animeworld == 'true' || github.event_name == 'pull_request'
        uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: anime_sign_no_firebase
        with:
          releaseDirectory: animeworld/build/outputs/apk/noFirebase/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - if: github.event.inputs.build_novelworld == 'true' || github.event_name == 'pull_request'
        uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: novel_sign
        with:
          releaseDirectory: novelworld/build/outputs/apk/full/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - if: github.event.inputs.build_novelworld == 'true' || github.event_name == 'pull_request'
        uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: novel_sign_no_firebase
        with:
          releaseDirectory: novelworld/build/outputs/apk/noFirebase/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - if: github.event.inputs.build_animeworldtv == 'true' || github.event_name == 'pull_request'
        uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: animetv_sign
        with:
          releaseDirectory: animeworldtv/build/outputs/apk/full/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - if: github.event.inputs.build_animeworldtv == 'true' || github.event_name == 'pull_request'
        uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: animetv_sign_no_firebase
        with:
          releaseDirectory: animeworldtv/build/outputs/apk/noFirebase/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      #      - name: Clean up build artifacts
      #        run: |
      #          cp ${{ steps.manga_sign.outputs.signedReleaseFile }} mangaworld-release.apk
      #          cp ${{ steps.anime_sign.outputs.signedReleaseFile }} animeworld-release.apk
      #          cp ${{ steps.novel_sign.outputs.signedReleaseFile }} novelworld-release.apk
      #          cp ${{ steps.manga_sign_no_firebase.outputs.signedReleaseFile }} mangaworld-no-firebase-release.apk
      #          cp ${{ steps.anime_sign_no_firebase.outputs.signedReleaseFile }} animeworld-no-firebase-release.apk
      #          cp ${{ steps.novel_sign_no_firebase.outputs.signedReleaseFile }} novelworld-no-firebase-release.apk
      #          cp ${{ steps.animetv_sign.outputs.signedReleaseFile }} animeworldtv-release.apk
      #          cp ${{ steps.animetv_sign_no_firebase.outputs.signedReleaseFile }} animeworldtv-no-firebase-release.apk

      - if: github.event.inputs.build_mangaworld == 'true' || github.event_name == 'pull_request'
        name: Clean up MangaWorld artifacts
        run: |
          cp ${{ steps.manga_sign.outputs.signedReleaseFile }} mangaworld-release.apk
          cp ${{ steps.manga_sign_no_firebase.outputs.signedReleaseFile }} mangaworld-no-firebase-release.apk

      - if: github.event.inputs.build_animeworld == 'true' || github.event_name == 'pull_request'
        name: Clean up AnimeWorld artifacts
        run: |
          cp ${{ steps.anime_sign.outputs.signedReleaseFile }} animeworld-release.apk
          cp ${{ steps.anime_sign_no_firebase.outputs.signedReleaseFile }} animeworld-no-firebase-release.apk

      - if: github.event.inputs.build_animeworldtv == 'true' || github.event_name == 'pull_request'
        name: Clean up AnimeWorldTV artifacts
        run: |
          cp ${{ steps.animetv_sign.outputs.signedReleaseFile }} animeworldtv-release.apk
          cp ${{ steps.animetv_sign_no_firebase.outputs.signedReleaseFile }} animeworldtv-no-firebase-release.apk

      - if: github.event.inputs.build_novelworld == 'true' || github.event_name == 'pull_request'
        name: Clean up NovelWorld artifacts
        run: |
          cp ${{ steps.novel_sign.outputs.signedReleaseFile }} novelworld-release.apk
          cp ${{ steps.novel_sign_no_firebase.outputs.signedReleaseFile }} novelworld-no-firebase-release.apk

      - uses: actions/upload-artifact@v3
        with:
          name: Signed Manga App
          path: mangaworld-release.apk

      - uses: actions/upload-artifact@v3
        with:
          name: Signed Anime App
          path: animeworld-release.apk

      - uses: actions/upload-artifact@v3
        with:
          name: Signed Novel App
          path: novelworld-release.apk

      - uses: actions/upload-artifact@v3
        with:
          name: Signed AnimeTV App
          path: animeworldtv-release.apk

      - uses: actions/upload-artifact@v3
        with:
          name: Signed Manga No Firebase App
          path: mangaworld-no-firebase-release.apk

      - uses: actions/upload-artifact@v3
        with:
          name: Signed Anime No Firebase App
          path: animeworld-no-firebase-release.apk

      - uses: actions/upload-artifact@v3
        with:
          name: Signed Novel No Firebase App
          path: novelworld-no-firebase-release.apk

      - uses: actions/upload-artifact@v3
        with:
          name: Signed AnimeTV No Firebase App
          path: animeworldtv-no-firebase-release.apk

